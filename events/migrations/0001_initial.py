# Generated by Django 5.2.7 on 2025-10-17 03:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("loc_detail", "0002_artcomment"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=80)),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("PUBLIC_OPEN", "Public - Open to All"),
                            ("PUBLIC_INVITE", "Public - Invite Only"),
                            ("PRIVATE", "Private"),
                        ],
                        default="PUBLIC_OPEN",
                        max_length=20,
                    ),
                ),
                ("start_time", models.DateTimeField(db_index=True)),
                ("description", models.TextField(blank=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "host",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hosted_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "start_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="events",
                        to="loc_detail.publicart",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="EventChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=300)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_messages",
                        to="events.event",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="EventInvite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("DECLINED", "Declined"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invites",
                        to="events.event",
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_invites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invitee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventJoinRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("DECLINED", "Declined"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("decided_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="join_requests",
                        to="events.event",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveSmallIntegerField()),
                ("note", models.CharField(blank=True, max_length=100)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="events.event",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="loc_detail.publicart",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="EventMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("HOST", "Host"),
                            ("ATTENDEE", "Attendee"),
                            ("INVITED", "Invited"),
                        ],
                        max_length=20,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="events.event",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["slug"], name="events_even_slug_30eb0f_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["start_time"], name="events_even_start_t_c2d277_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["visibility"], name="events_even_visibil_6abc2e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["host", "start_time"], name="events_even_host_id_805aa0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventchatmessage",
            index=models.Index(
                fields=["event", "-created_at"], name="events_even_event_i_4003f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventinvite",
            index=models.Index(
                fields=["invitee", "status"], name="events_even_invitee_a0ba73_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventinvite",
            index=models.Index(fields=["event"], name="events_even_event_i_102526_idx"),
        ),
        migrations.AddConstraint(
            model_name="eventinvite",
            constraint=models.UniqueConstraint(
                fields=("event", "invitee"), name="uniq_event_invitee"
            ),
        ),
        migrations.AddIndex(
            model_name="eventjoinrequest",
            index=models.Index(
                fields=["event", "status"], name="events_even_event_i_49b434_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventjoinrequest",
            index=models.Index(
                fields=["requester"], name="events_even_request_832a0e_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="eventjoinrequest",
            constraint=models.UniqueConstraint(
                fields=("event", "requester"), name="uniq_event_join_request"
            ),
        ),
        migrations.AddConstraint(
            model_name="eventlocation",
            constraint=models.UniqueConstraint(
                fields=("event", "order"), name="uniq_event_location_order"
            ),
        ),
        migrations.AddConstraint(
            model_name="eventlocation",
            constraint=models.UniqueConstraint(
                fields=("event", "location"), name="uniq_event_location_pair"
            ),
        ),
        migrations.AddIndex(
            model_name="eventmembership",
            index=models.Index(
                fields=["event", "role"], name="events_even_event_i_cab90d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventmembership",
            index=models.Index(fields=["user"], name="events_even_user_id_faaa1d_idx"),
        ),
        migrations.AddConstraint(
            model_name="eventmembership",
            constraint=models.UniqueConstraint(
                fields=("event", "user"), name="uniq_event_user_membership"
            ),
        ),
    ]
